parameters:
  - name: "projectsName"
    type: object
    default: {}
  - name: "environments"
    type: object
    default: {}     
 
steps:
  - ${{ each projectName in parameters.projectsName }}:
      
      - ${{ each environment in parameters.environments }}:
          - bash: |
              helm lint ./${{ projectName }} -f ./${{ projectName }}/env/${{ environment }}/values.yaml 
            failOnStderr: true
            displayName: '${{ projectName }}: Helm lint for  ${{ environment }}'

      - bash: |
          CHART_VERSION="$(cat ./${{ projectName }}/Chart.yaml | awk '/version:/ {print $2}')"
          echo "##vso[task.setvariable variable=CHART_VERSION]$CHART_VERSION"
          
          echo Chart version $CHART_VERSION
        failOnStderr: true
        displayName: '${{ projectName }}: Extract Helm Chat version'

      - task: HelmDeploy@0
        displayName: '${{ projectName }}: Helm package'
        inputs:
          command: 'package'
          chartPath: './${{ projectName }}'
          chartVersion: '$(CHART_VERSION)'
          
      - bash: |
          PACKAGE="$(Build.ArtifactStagingDirectory)/${{ projectName }}-$(CHART_VERSION).tgz"
          REPOSITORY="oci://$(acrName).azurecr.io/xu-helm/helm-charts"
          echo Chart will be pushed to $REPOSITORY
          
          helm push $PACKAGE $REPOSITORY
        failOnStderr: true
        displayName: '${{ projectName }}: Push Helm Chart'